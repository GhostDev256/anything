#by Ghost
#–ì–µ–º–æ—Ä.

import amino, random, time, os

print("–ü–æ–¥–∫–ª—é—á–∞—é—Å—å...")

client = amino.Client(' ')
client.login(email=' ', password=' ')
sub_client = amino.SubClient(comId='', profile=client.profile)

badWord = open("message_badWord.txt", "r", encoding="utf-8")
badWordList = badWord.read().split(",")
badWord.close()

message_log_num = 0
message_log_max = 35

#–û–ø—Ü–∏–∏
options_anti_raid_file = open(f"Info/Options anti raid.txt", "r", encoding="utf-8")
options_anti_raid = str(options_anti_raid_file.read())
options_anti_raid_file.close()

options_chat_assistant_file = open(f"Info/Options chat assistant.txt", "r", encoding="utf-8")
options_chat_assistant = str(options_chat_assistant_file.read())
options_chat_assistant_file.close()

'''options_function_interlocutor_file = open(f"Info/Options function interlocutor.txt", "r", encoding="utf-8")
options_function_interlocutor = str(options_function_interlocutor_file.read())
options_function_interlocutor_file.close()'''

options_greeting_file = open(f"Info/Options greeting.txt", "r", encoding="utf-8")
options_greeting = str(options_greeting_file.read())
options_greeting_file.close()

options_response_mats_in_blogs_file = open(f"Info/Options response mats in blogs.txt", "r", encoding="utf-8")
options_response_mats_in_blogs = str(options_response_mats_in_blogs_file.read())
options_response_mats_in_blogs_file.close()

options_response_mats_in_chats_file = open(f"Info/Options response mats in chats.txt", "r", encoding="utf-8")
options_response_mats_in_chats = str(options_response_mats_in_chats_file.read())
options_response_mats_in_chats_file.close()

'''options_sendingGreetings_file = open(f"Info/Options sending greetings.txt", "r", encoding="utf-8")
options_sendingGreetings = str(options_sendingGreetings_file.read())
options_sendingGreetings_file.close()'''

options_specify_chat_complaints_file = open(f"Info/Options specify chat complaints.txt", "r", encoding="utf-8")
options_specify_chat_complaints = str(options_specify_chat_complaints_file.read())
options_specify_chat_complaints_file.close()

spam_message_user = ""
spam_message_back = ""
spam_message_index = 0

print("–í—Å–µ –≥–æ—Ç–æ–≤–æ.")

def is_non_zero_file(fpath):  
    fpath.seek(0, os.SEEK_END) 
    if fpath.tell(): 
        return False
    else:        
        return True

def concat_option(OnOff):  
    if OnOff == "False": 
        return "off"
    if OnOff == "True":        
        return "on"

@client.callbacks.event("on_text_message")
def on_text_message(data):  

    root_users_file = open(f"Info/Root users.txt", "r", encoding="utf-8")
    root_users = root_users_file.read().split(",")
    root_users_file.close()

    bot_name_file = open(f"Info/Bot name.txt", "r", encoding="utf-8")
    bot_name_file = bot_name_file.read().split(" ")
    bot_name_file.append(bot_name_file[0])
    bot_name_file.append(bot_name_file[0] + ",")
    _bot_name = [""]
    for i in bot_name_file:
        _bot_name.append(i.lower())
    bot_name = _bot_name
    
    mes_time = time.strftime("–ß–∏—Å–ª–æ: %d.%m.%Y (–¥/–º/–≥).\n–í—Ä–µ–º—è: %X (–ø–æ –ú–°–ö).", time.localtime())

    id = data.message.messageId
    user_name = data.message.author.nickname
    _user_name = user_name.split(" ")
    user_id = data.message.author.userId
    _content = data.message.content
    chatId = data.message.chatId
    chat_name = str(sub_client.get_chat_thread(data.message.chatId).title)

    global message_log_num, message_log_max
    if _user_name[0].lower() not in (bot_name):
        message_log_num += 1
        message_log = open(f"Logs/log_{message_log_num}.txt", "w", encoding="utf-8")
        message_log.write(f"{mes_time}\n–ò–º—è —á–∞—Ç–∞: '{chat_name}'.\nid —á–∞—Ç–∞: '{chatId}'.\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '{user_name}'.\nid –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '{user_id}'.\n\n–°–æ–æ–±—â–µ–Ω–∏–µ: '{_content}'.")
        message_log.close()
        if message_log_num == message_log_max:
            message_log_num = 0

    #–í —Ç–µ—Ä–º–∏–Ω–∞–ª
    print(f"----------------------------------------------") 
    print(f"{mes_time}")
    print(f"–ò–º—è —á–∞—Ç–∞: {chat_name}, id —á–∞—Ç–∞: {chatId}.")
    print(f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_name}, id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}.")
    print(f" ")
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {_content}")
    
    contents = str(data.message.content).split(" ")
    contents_no_comma = str(data.message.content).split(",") 
    contents_no_slash = str(data.message.content).split("/")
    contents_no_questionMark = str(data.message.content).split("!")
    contents_no_exclamationPoint = str(data.message.content).split("?")
    contents_no_point = str(data.message.content).split(".")
    content = contents_no_comma + contents + contents_no_point + contents_no_slash + contents_no_questionMark + contents_no_exclamationPoint
    content = set(content)

    global spam_message_index, spam_message_back, spam_message_user
    spam_message_index += 1
    if spam_message_index == 2:
        if spam_message_back == _content and (spam_message_user == user_name and spam_message_user not in bot_name):
            spam_message_index = 1
            
            sub_client.send_message(chatId=chatId, message="–î–∞–≤–∞–π—Ç–µ –Ω–µ —Å–ø–∞–º–∏—Ç—å, –æ–∫–µ–π?", replyTo=id)           
            
            message_complaint = f"–£—á–∞—Å—Ç–Ω–∏–∫ '{user_name}' —Å–ø–∞–º–∏—Ç –≤ —á–∞—Ç–µ '{chat_name}'.\n\n{mes_time}.\n\n–°–æ–æ–±—â–µ–Ω–∏–µ: '{_content}' –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ–ª–µ–µ —Ç—Ä–µ—Ö —Ä–∞–∑ –ø–æ–¥—Ä—è–¥."                                                               
            sub_client.send_message(chatId=options_specify_chat_complaints, message=message_complaint)

            #–ö–æ—Å—Ç—ã–ª–∏ –º–æ–∏ –∫–æ—Å—Ç—ã–ª–∏...
            if options_chat_assistant == "True":
                try:
                    sub_client.kick(chatId=chatId, userId=user_id)
                except BaseException:
                    pass

        else:
            spam_message_back = _content
            spam_message_user = user_name
            spam_message_index = 0

    for i in content:
        if i.lower() in (badWordList) and _user_name[0].lower() not in (bot_name) and chat_name != "None" and options_response_mats_in_chats == "True":
            message_warning = ["–ü–æ–ø–∞–ª—Å—è.", f"{user_name}, –∞ —è –≤—Å–µ –≤–∏–∂—É!", 
                                "–û–π, —á—Ç–æ —è –≤–∏–∂—É?", 
                                "–ê —Ç–∞–∫ –Ω–µ –Ω–∞–¥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.", 
                                f"–ñ–∏—Ç—å –Ω–∞–¥–æ–µ–ª–æ, {user_name}?", "–í–æ–æ–±—â–µ-—Ç–æ, —è –µ—â–µ —Ç—É—Ç.",
                                "Press F."]
            sub_client.send_message(chatId=chatId, message=random.choice(message_warning), replyTo=id)            
            
            message_complaint = f"–£—á–∞—Å—Ç–Ω–∏–∫ '{user_name}' –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–∞ –≤ —á–∞—Ç–µ '{chat_name}'.\n\n{mes_time}.\n\n–¶–∏—Ç–∏—Ä—É—é: '{_content}'."                                                               
            sub_client.send_message(chatId=options_specify_chat_complaints, message=message_complaint) #"fa9b3477-6e83-4b01-8623-0705cf77e774"

            if options_chat_assistant == "True":
                try:
                    sub_client.kick(chatId=chatId, userId=user_id)
                except BaseException:
                    pass

    '''massege_greeting = ["–ø—Ä–∏–≤–µ—Ç", "–ø—Ä–∏–≤–µ—Ç.", "–ø—Ä–∏–≤–µ—Ç!", "–ø—Ä–∏–≤–µ—Ç?", 
                        "—Ö–µ–ª–ª–æ—É", "—Ö–µ–ª–ª–æ—É.", "—Ö–µ–ª–ª–æ—É!", "—Ö–µ–ª–ª–æ—É?",
                        "—Ö–µ–ª–æ—É", "—Ö–µ–ª–æ—É.", "—Ö–µ–ª–æ—É!", "—Ö–µ–ª–æ—É?",
                        "—Ö–∞–π", "—Ö–∞–π.", "—Ö–∞–π!", "—Ö–∞–π?"
                        "—Ö–æ–π", "—Ö–æ–π.", "—Ö–æ–π!",
                        "hi", "hi.", "hi!", "hi?",
                        "hai", "hai.", "hai!", "hai?",
                        "hoi", "hoi.", "hoi!", "hoi?",
                        "hello", "hello.", "hello!", "hello?",
                        "helo", "helo.", "helo!", "helo?",
                        "—Ö–∞—Ü", "—Ö–∞—Ü.", "—Ö–∞—Ü!",
                        "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é", "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é.", "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!", "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é?",
                        "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–∑–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ.", "–∑–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ!", "–∑–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ?",
                        "–ø—Ä–∏–≤–∏—Ç", "–ø—Ä–∏–≤–∏—Ç.", "–ø—Ä–∏–≤–∏—Ç!", "–ø—Ä–∏–≤–∏—Ç?",
                        "–ø—Ä–∏–≤–∫–∏", "–ø—Ä–∏–≤–∫–∏.", "–ø—Ä–∏–≤–∫–∏!", "–ø—Ä–∏–≤–∫–∏?",
                        "–ø—Ä–∏–≤", "–ø—Ä–∏–≤.", "–ø—Ä–∏–≤!", "–ø—Ä–∏–≤?",
                        "–∑–¥—Ä–∞—Å—Ç–µ", "–∑–¥—Ä–∞—Å—Ç–µ.", "–∑–¥—Ä–∞—Å—Ç–µ!", "–∑–¥—Ä–∞—Å—Ç–µ?",
                        "–¥—Ä–∞—Å—Ç–µ", "–¥—Ä–∞—Å—Ç–µ.", "–¥—Ä–∞—Å—Ç–µ!", "–¥—Ä–∞—Å—Ç–µ?",
                        "–ø—Ä–∏–≤–µ—Ç–∏–∫", "–ø—Ä–∏–≤–µ—Ç–∏–∫.", "–ø—Ä–∏–≤–µ—Ç–∏–∫!", "–ø—Ä–∏–≤–µ—Ç–∏–∫?"]
    for i in contents:
        if (i.lower() in massege_greeting) and (_user_name[0].lower() not in bot_name) and (options_greeting == "True"):        
            massege_hiList = [f"–ü—Ä–∏–≤–µ—Ç, {user_name}!", f"–ü—Ä–∏–≤–µ—Ç–∏–∫, {user_name}.", "–•–∞–π. üëÄ", "–ü—Ä–∏–≤–µ—Ç!", f"–ó–¥—Ä–∞—Å—Ç–≤—É–π, {user_name}!"]
            sub_client.send_message(chatId=chatId, message=random.choice(massege_hiList), replyTo=id)'''

    if contents[0][0:].lower() in (bot_name):
        if contents[1][0:].lower() in ("commands", "commands.", "commands?"):
            message_help = open("message_help.txt", "r", encoding="utf-8")
            sub_client.send_message(chatId=chatId, message=message_help.read(), replyTo=id)
            message_help.close()

        if contents[1][0:].lower() in ("alive", "alive?", "alive."):
            message_alive = ["–ö–æ–Ω–µ—á–Ω–æ. üëÄ", "–£–≥—É.", f"–î–∞ –∫—É–¥–∞ —è –¥–µ–Ω—É—Å—å, {user_name}? üëÄ", "–î–∞.", "–ê –∫–∞–∫ –∂–µ?", "üëÄ"]
            sub_client.send_message(chatId=chatId, message=random.choice(message_alive), replyTo=id)

        if contents[1][0:].lower() in ("do_the_magic", "do_the_magic."):
            sub_client.send_message(chatId=chatId, message="–ú–∞–≥–∏—è.", messageType=100)

        if contents[1][0:].lower() in ("tell_me_joke", "tell_me_joke", "tell_me_joke."):
            sub_client.send_message(chatId=chatId, message="–û–∫–µ–π, —Å–µ–∫—É–Ω–¥—É.", replyTo=id)
            joke_num = "Anecdotes/1 ‚Äî –∫–æ–ø–∏—è (" + str(random.randint(1, 100)) + ").txt"
            message_joke = open(joke_num, "r", encoding="utf-8")
            sub_client.send_message(chatId=chatId, message=message_joke.read())
            message_joke.close()

        #–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        #–í—ã–≤–µ—Å—Ç–∏ –∞–π–¥–∏ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞. 
        if contents[1][0:].lower() in ("get_chatid", "get_chatid.") and user_id in root_users:
            sub_client.send_message(chatId=chatId, message=chatId, replyTo=id)
        if contents[1][0:].lower() in ("get_chatid", "get_chatid.") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä—É—Ç-–∫–æ–º–∞–Ω–¥
        if contents[1][0:].lower() in ("root_commands", "root_commands.") and user_id in root_users:
            message_root_commands = open("message_root_commands.txt", "r", encoding="utf-8")
            sub_client.send_message(chatId=chatId, message=message_root_commands.read(), replyTo=id)
            message_root_commands.close()
        if contents[1][0:].lower() in ("root_commands", "root_commands.") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–î–∞—Ç—å —Ä—É—Ç-–ø—Ä–∞–≤–∞.
        if contents[1][0:].lower() == "give_root" and user_id in root_users:
            if contents[2] in root_users:
                sub_client.send_message(chatId=chatId, message="–¢–∞–∫–æ–π —É–∂–µ –µ—Å—Ç—å.", replyTo=id)
            else:
                sub_client.send_message(chatId=chatId, message=f"–ü—Ä–∏–Ω—è—Ç–æ, {user_name}.", replyTo=id)

                root_users_file = open(f"Info/Root users.txt", "a", encoding="utf-8")
                root_users_file.write(f",{contents[2]}")
                root_users_file.close()

        if contents[1][0:].lower() == "give_root" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–û—Ç–æ–±—Ä–∞—Ç—å —Ä—É—Ç-–ø—Ä–∞–≤–∞. 
        if contents[1][0:].lower() == "select_root" and user_id in root_users:
            if contents[2] != "8d39d89a-3db9-438e-a740-28574cd68268":
                sub_client.send_message(chatId=chatId, message=f'–¢–∞–∫–æ–≥–æ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ, {user_name}. üëÄ"', replyTo=id)
                if contents[2] not in root_users:
                    sub_client.send_message(chatId=chatId, message=f'–¢–∞–∫–æ–≥–æ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ, {user_name}. üëÄ"', replyTo=id)
                else:
                    for i in root_users:
                        if i in contents[2]:
                            root_users.remove(i)
                            root_users_file = open(f"Info/Root users.txt", "w", encoding="utf-8")
                            root_users_file.write("")
                            root_users_file.close()
                            for r in root_users:
                                root_users_file = open(f"Info/Root users.txt", "a", encoding="utf-8")
                                root_users_file.write("," + r)
                                root_users_file.close()
            else:
                sub_client.send_message(chatId=chatId, message=f"–ù–µ, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–æ–±—Ä–∞—Ç—å —Ä—É—Ç —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", replyTo=id)
        
                sub_client.send_message(chatId=chatId, message=f"–°–¥–µ–ª–∞–Ω–æ.", replyTo=id)
        if contents[1][0:].lower() == "select_root" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        if contents[1][0:].lower() in ("root_users_list", "root_users_list.", "root_users_list!") and user_id in root_users:
            sub_client.send_message(chatId=chatId, message="–û–∫–µ–π, —Å–µ–π—á–∞—Å.", replyTo=id)     
            root_users_index = -1
            root_users_message = "[C]–°–ø–∏—Å–æ–∫ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            for i in root_users:
                root_users_index += 1
                if root_users_index >= 1:
                    root_users_message += f"[C]{root_users_index}.\n–ù–∏–∫–Ω–µ–π–º: '{sub_client.get_user_info(i).nickname}'.\n–ê–π–¥–∏: '{i}'.\n"
                else:
                    root_users_message += "\n"
            sub_client.send_message(chatId=chatId, message=root_users_message)
        if contents[1][0:].lower() in ("root_users_list", "root_users_list.", "root_users_list!") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–∞—Ç—É.
        #–° —É–∫–∞–∑–∞–Ω–∏–µ–º –ê–π–¥–∏
        if contents[1][0:].lower() in ("join_the_chat") and user_id in root_users: 
            sub_client.send_message(chatId=chatId, message="–û–∫–µ–π, –º–∏–Ω—É—Ç–∫—É...", replyTo=id)     
            sub_client.join_chat(chatId=contents[2])       
        if contents[1][0:].lower() in ("join_the_chat") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –ê–π–¥–∏.
        if contents[1][0:].lower() in ("join_the_chat.") and user_id in root_users: 
            sub_client.join_chat(chatId=chatId)        
        if contents[1][0:].lower() in ("join_the_chat.") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞.     
        #–° —É–∫–∞–∑–∞–Ω–∏–µ–º –ê–π–¥–∏.
        if contents[1][0:].lower() in ("leave_the_chat") and user_id in root_users: 
            sub_client.send_message(chatId=chatId, message="–õ–∞–¥–Ω–æ...", replyTo=id)     
            sub_client.leave_chat(chatId=contents[2])      
        if contents[1][0:].lower() in ("leave_the_chat") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–ë–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –ê–π–¥–∏.
        if contents[1][0:].lower() in ("leave_the_chat.") and user_id in root_users: 
            sub_client.send_message(chatId=chatId, message="–õ–∞–¥–Ω–æ...", replyTo=id)     
            sub_client.leave_chat(chatId=chatId)      
        if contents[1][0:].lower() in ("leave_the_chat.") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
        if contents[1][0:].lower() == "subscribe" and user_id in root_users: 
            sub_client.send_message(chatId=chatId, message="–û–∫–µ–π, —Å–µ–π—á–∞—Å.", replyTo=id)      
            sub_client.follow(userId=contents[2])
        if contents[1][0:].lower() == "subscribe" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
        if contents[1][0:].lower() == "unsubscribe" and user_id in root_users: 
            sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)    
            sub_client.unfollow(userId=contents[2])       
        if contents[1][0:].lower() == "unsubscribe" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—Ç—å –±–æ—Ç–∞ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞). 
        if contents[1][0:].lower() in ("get_chat_list", "get_chat_list.") and user_id in root_users: 
            sub_client.send_message(chatId=chatId, message="–û–∫–µ–π, —Å–µ–π—á–∞—Å.", replyTo=id)       
            chat_list = sub_client.get_chat_threads().title
            chat_list_id = sub_client.get_chat_threads().chatId
            
            index_chat, index_chat_id = 0, 0
            for i in chat_list:
                if i == None:
                    index_chat_id -= 1
                    continue
                index_chat += 1     
                index_chat_id += 1  
                sub_client.send_message(chatId=chatId, message=f"[IC]{index_chat}.\n\n–ò–º—è —á–∞—Ç–∞: '{i}'.\n\n–ï–≥–æ id: {chat_list_id[index_chat_id]}.")                         
            sub_client.send_message(chatId=chatId, message="–≠—Ç–æ –≤—Å–µ.")
        if contents[1][0:].lower() in ("get_chat_list", "get_chat_list.") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)
        
        #–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ. 
        if contents[1][0:].lower() == "greeting" and user_id in root_users: 
            if contents[2].lower() in ("on", "on.", "on!") and options_greeting != "True":
                options_greeting_file = open(f"Info/Options greeting.txt", "w", encoding="utf-8")
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)  
                options_greeting_file.write("True")
                options_greeting_file.close()
            if contents[2].lower() in ("on", "on.", "on!") and options_greeting == "True":
                sub_client.send_message(chatId=chatId, message=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã.", replyTo=id)

            if contents[2].lower() in ("off", "off.", "off!") and options_greeting != "False":
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)                  
                options_greeting_file = open(f"Info/Options greeting.txt", "w", encoding="utf-8")
                options_greeting_file.write("False")
                options_greeting_file.close()
            if contents[2].lower() in ("off", "off.", "off!") and options_greeting == "False":
                sub_client.send_message(chatId=chatId, message=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —Ç–∞–∫ –≤—ã–∫–ª—é—á–µ–Ω—ã.", replyTo=id)
  
        if contents[1][0:].lower() == "greeting" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –≤—ã–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ –º–∞—Ç–æ–≤/—Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤ –∏–∑ —á–∞—Ç–æ–≤. 
        if contents[1][0:].lower() == "response_mats_in_chats" and user_id in root_users: 
            if contents[2].lower() in ("on", "on.", "on!") and options_response_mats_in_chats != "True":
                options_response_mats_in_chats_file = open(f"Info/Options response mats in chats.txt", "w", encoding="utf-8")
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)  
                options_response_mats_in_chats_file.write("True")
                options_response_mats_in_chats_file.close()
            if contents[2].lower() in ("on", "on.", "on!") and options_response_mats_in_chats == "True":
                sub_client.send_message(chatId=chatId, message=f"–†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –º–∞—Ç—ã –≤ —á–∞—Ç–∞—Ö —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ.", replyTo=id)

            if contents[2].lower() in ("off", "off.", "off!") and options_response_mats_in_chats != "False":
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)                  
                options_response_mats_in_chats_file = open(f"Info/Options response mats in chats.txt", "w", encoding="utf-8")
                options_response_mats_in_chats_file.write("False")
                options_response_mats_in_chats_file.close()
            if contents[2].lower() in ("off", "off.", "off!") and options_response_mats_in_chats == "False":
                sub_client.send_message(chatId=chatId, message=f"–†–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –º–∞—Ç—ã –≤ —á–∞—Ç–∞—Ö –∏ —Ç–∞–∫ –≤—ã–∫–ª—é—á–µ–Ω–æ.", replyTo=id)

        if contents[1][0:].lower() == "response_mats_in_chats" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        '''#–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –≤—ã–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ –º–∞—Ç–æ–≤/—Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤ –∏–∑ –±–ª–æ–≥–æ–≤. 
        if contents[1][0:].lower() == "response_mats_in_blogs" and user_id in root_users: 
            if contents[2].lower() in ("on", "on.", "on!") and options_response_mats_in_blogs != "True":
                options_response_mats_in_blogs_file = open(f"Info/Options response mats in blogs.txt", "w", encoding="utf-8")
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)  
                options_response_mats_in_blogs_file.write("True")
                options_response_mats_in_blogs_file.close()
            if contents[2].lower() in ("on", "on.", "on!") and options_response_mats_in_blogs == "True":
                sub_client.send_message(chatId=chatId, message=f"–£–∂–µ –≤–∫–ª—é—á–µ–Ω–æ.", replyTo=id)

            if contents[2].lower() in ("off", "off.", "off!") and options_response_mats_in_blogs != "False":
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)                  
                options_response_mats_in_blogs_file = open(f"Info/Options response mats in blogs.txt", "w", encoding="utf-8")
                options_response_mats_in_blogs_file.write("False")
                options_response_mats_in_blogs_file.close()
            if contents[2].lower() in ("off", "off.", "off!") and options_response_mats_in_blogs == "False":
                sub_client.send_message(chatId=chatId, message=f"–û–Ω–æ –∏ —Ç–∞–∫ –≤—ã–∫–ª—é—á–µ–Ω–æ...", replyTo=id)

        if contents[1][0:].lower() == "response_mats_in_blogs" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)'''
        
        #–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–Ω—Ç–∏-—Å–ø–∞–º. 
        if contents[1][0:].lower() == "anti_raid" and user_id in root_users: 
            if contents[2].lower() in ("on", "on.", "on!") and options_anti_raid != "True":
                options_anti_raid_file = open(f"Info/Options anti raid.txt", "w", encoding="utf-8")
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)  
                options_anti_raid_file.write("True")
                options_anti_raid_file.close()
            if contents[2].lower() in ("on", "on.", "on!") and options_anti_raid == "True":
                sub_client.send_message(chatId=chatId, message="–ê–Ω—Ç–∏-—Ä–µ–π–¥/—Å–ø–∞–º-—Ñ–∏–ª—å—Ç—Ä —É–∂–µ –≤–∫–ª—é—á–µ–Ω.", replyTo=id)

            if contents[2].lower() in ("off", "off.", "off!") and options_anti_raid != "False":
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)                  
                options_anti_raid_file = open(f"Info/Options anti raid.txt", "w", encoding="utf-8")
                options_anti_raid_file.write("False")
                options_anti_raid_file.close()
            if contents[2].lower() in ("off", "off.", "off!") and options_anti_raid == "False":
                sub_client.send_message(chatId=chatId, message="–ê–Ω—Ç–∏-—Ä–µ–π–¥/—Å–ø–∞–º-—Ñ–∏–ª—å—Ç—Ä –∏ —Ç–∞–∫ –≤—ã–∫–ª—é—á–µ–Ω.", replyTo=id)

        if contents[1][0:].lower() == "anti_raid" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å chat_assistant. 
        if contents[1][0:].lower() == "chat_assistant" and user_id in root_users: 
            if contents[2].lower() in ("on", "on.", "on!") and options_chat_assistant != "True":
                options_chat_assistant_file = open(f"Info/Options chat assistant.txt", "w", encoding="utf-8")
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)  
                options_chat_assistant_file.write("True")
                options_chat_assistant_file.close()
            if contents[2].lower() in ("on", "on.", "on!") and options_chat_assistant == "True":
                sub_client.send_message(chatId=chatId, message=f"–û–ø—Ü–∏—è –ø–æ–º–æ—â–Ω–∏–∫–∞ —á–∞—Ç–∞ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞.", replyTo=id)

            if contents[2].lower() in ("off", "off.", "off!") and options_chat_assistant != "False":
                sub_client.send_message(chatId=chatId, message=f"–ö–∞–∫ —Å–∫–∞–∂–µ—à—å, {user_name}.", replyTo=id)                  
                options_chat_assistant_file = open(f"Info/Options chat assistant.txt", "w", encoding="utf-8")
                options_chat_assistant_file.write("False")
                options_chat_assistant_file.close()
            if contents[2].lower() in ("off", "off.", "off!") and options_chat_assistant == "False":
                sub_client.send_message(chatId=chatId, message=f"–û–ø—Ü–∏—è –ø–æ–º–æ—â–Ω–∏–∫–∞ —á–∞—Ç–∞ –∏ —Ç–∞–∫ –≤—ã–∫–ª—é—á–µ–Ω–∞.", replyTo=id) 

        if contents[1][0:].lower() == "chat_assistant" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #Fuck...
        #–í—ã–≤–µ—Å—Ç–∏ N –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ª–æ–≥–∞.
        if contents[1][0:].lower() == "get_list_log" and user_id in root_users: 
            if int(contents[2]) > 0:
                sub_client.send_message(chatId=chatId, message="–û–∫–µ–π, –≥–æ—Ç–æ–≤—å—Å—è.", replyTo=id)

                if int(contents[2]) <= message_log_max:   
                    message_log_index = 0
                    while message_log_index <= int(contents[2]) - 1:
                        message_log_index += 1
                        message_log_conclusion = open(f"Logs/log_{message_log_index}.txt", "r", encoding="utf-8")
                        file_void = is_non_zero_file(message_log_conclusion)
                        message_log_conclusion.close()
                        if file_void:
                            message_log_conclusion = open(f"Logs/log_{message_log_index}.txt", "r", encoding="utf-8")
                            sub_client.send_message(chatId=chatId, message="–ü–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ.")
                            message_log_conclusion.close()
                        else:       
                            message_log_conclusion = open(f"Logs/log_{message_log_index}.txt", "r", encoding="utf-8")                 
                            sub_client.send_message(chatId=chatId, message=message_log_conclusion.read())
                            message_log_conclusion.close()
                    sub_client.send_message(chatId=chatId, message="–Ø –≤—Å–µ.")
                else:
                    sub_client.send_message(chatId=chatId, message=f"–ê, —Å—Ç–æ–ø. –í–æ–æ–±—â–µ-—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞ {message_log_max}.") 
            else:
                sub_client.send_message(chatId=chatId, message=f"–≠—Ç–æ –∫–∞–∫? –ù–µ, –¥–∞–≤–∞–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –±–æ–ª—å—à–µ –Ω—É–ª—è.", replyTo=id)
                  
        if contents[1][0:].lower() == "get_list_log" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–ù—É –∏ –≥–µ–º–æ—Ä.
        #–í—ã–≤–µ—Å—Ç–∏ N —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ª–æ–≥–∞. 
        if contents[1][0:].lower() == "get_log" and user_id in root_users:             
            if int(contents[2]) > 0:
                sub_client.send_message(chatId=chatId, message="–û–¥–∏–Ω –º–æ–º–µ–Ω—Ç.", replyTo=id)

                if int(contents[2]) <= message_log_max:
                    message_log_conclusion = open(f"Logs/log_{contents[2]}.txt", "r", encoding="utf-8")
                    file_void = is_non_zero_file(message_log_conclusion)
                    message_log_conclusion.close()
                    if file_void:
                        message_log_conclusion = open(f"Logs/log_{contents[2]}.txt", "r", encoding="utf-8")
                        sub_client.send_message(chatId=chatId, message="–ü–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ.")
                        message_log_conclusion.close()
                    else:          
                        message_log_conclusion = open(f"Logs/log_{contents[2]}.txt", "r", encoding="utf-8")              
                        sub_client.send_message(chatId=chatId, message=message_log_conclusion.read())
                        message_log_conclusion.close()
                else: 
                    sub_client.send_message(chatId=chatId, message=f"–ê, —Å—Ç–æ–ø. –í–æ–æ–±—â–µ-—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞ {message_log_max}.")
            else:
                sub_client.send_message(chatId=chatId, message=f"–≠—Ç–æ –∫–∞–∫? –ù–µ, –¥–∞–≤–∞–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –±–æ–ª—å—à–µ –Ω—É–ª—è.", replyTo=id)

        if contents[1][0:].lower() == "get_log" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–í—ã–≤–µ—Å—Ç–∏ N –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ª–æ–≥–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –¥–∏–∞–ø–æ–∑–æ–Ω–µ.
        if contents[1][0:].lower() == "get_list_to" and user_id in root_users: 
            if int(contents[2]) > 0 and int(contents[3]) > 0 and int(contents[3]) > int(contents[2]):
                sub_client.send_message(chatId=chatId, message=f"–û–∫–µ–π, –≥–æ—Ç–æ–≤—å—Å—è {user_name}.", replyTo=id)

                if int(contents[3]) <= message_log_max: 

                    message_log_index = int(contents[2])
                    while message_log_index <= int(contents[3]):
                        message_log_index += 1
                        message_log_conclusion = open(f"Logs/log_{message_log_index}.txt", "r", encoding="utf-8")
                        file_void = is_non_zero_file(message_log_conclusion)
                        message_log_conclusion.close()
                        if file_void:
                            message_log_conclusion = open(f"Logs/log_{message_log_index}.txt", "r", encoding="utf-8")
                            sub_client.send_message(chatId=chatId, message="–ü–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ.")
                            message_log_conclusion.close()
                        else:                        
                            message_log_conclusion = open(f"Logs/log_{message_log_index}.txt", "r", encoding="utf-8")
                            sub_client.send_message(chatId=chatId, message=message_log_conclusion.read())
                            message_log_conclusion.close()
                    sub_client.send_message(chatId=chatId, message="–Ø –≤—Å–µ.")

                else:
                    sub_client.send_message(chatId=chatId, message=f"–ê, —Å—Ç–æ–ø. –í–æ–æ–±—â–µ-—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞ {message_log_max}.")
            else:
                sub_client.send_message(chatId=chatId, message=f"–ù–µ—Ç, –¥–∞–≤–∞–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ: 0 < n1 < n2", replyTo=id)

        if contents[1][0:].lower() == "get_list_to" and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)
    
        #–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª–∏–Ω–Ω—É –ª–æ–≥–∞.
        if contents[1][0:].lower() == "list_log_max" and user_id in root_users: 
            if contents[2] in ("default", "default.", "default!"):
                sub_client.send_message(chatId=chatId, message=f"–ü—Ä–∏–Ω—è—Ç–æ.", replyTo=id)
                message_log_max = 35
                
            if int(contents[2]) < 0:
                if int(contents[2]) <= 250 and int(contents[2]) > 0:
                    sub_client.send_message(chatId=chatId, message=f"–û–∫–µ–π, –≤—Å–µ —Å–¥–µ–ª–∞–Ω–æ.", replyTo=id)
                    message_log_max = int(contents[2])
                else:
                    sub_client.send_message(chatId=chatId, message=f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ 250.", replyTo=id)   
            else:
                sub_client.send_message(chatId=chatId, message=f"–≠—Ç–æ –∫–∞–∫? –ù–µ, –¥–∞–≤–∞–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –±–æ–ª—å—à–µ –Ω—É–ª—è.", replyTo=id)             
            
        if contents[1][0:].lower() in ("list_log_max") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö/–≤—ã–∫–ª—é—á–µ–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π. 
        if contents[1][0:].lower() in ("get_list_options", "get_list_options.") and user_id in root_users: 
            options = f"[C]Anti_raid: {concat_option(options_anti_raid)}.\n[C]Greeting: {concat_option(options_greeting)}.\n[C]Chat assistant: {concat_option(options_chat_assistant)}.\n[C]Response mats in chats: {concat_option(options_response_mats_in_chats)}.\n[C]Response mats in blogs: {concat_option(options_response_mats_in_blogs)}.\n\n[C]Specify chat complaints:\n[C]'{str(sub_client.get_chat_thread(options_specify_chat_complaints).title)}'\n[C]{options_specify_chat_complaints}."
            sub_client.send_message(chatId=chatId, message=options, replyTo=id)      
        if contents[1][0:].lower() in ("get_list_options", "get_list_options.") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)
        
        #–£–∫–∞–∑–∞—Ç—å –∞–π–¥–∏ —á–∞—Ç–∞ –¥–ª—è –∂–∞–ª–æ–±.
        if contents[1][0:].lower() in ("options_specify_chat_complaints") and user_id in root_users: 
            if (options_response_mats_in_chats == "True" or options_response_mats_in_blogs == "True"):

                sub_client.send_message(chatId=chatId, message="–ü—Ä–∏–Ω—è—Ç–æ.", replyTo=id)       

                options_specify_chat_complaints_file = open(f"Info/Options specify chat complaints.txt", "w", encoding="utf-8")
                options_specify_chat_complaints_file.write(str(contents[2]))
                options_specify_chat_complaints_file.close()
            else:
                sub_client.send_message(chatId=chatId, message="–§—É–Ω–∫—Ü–∏–∏ –ø–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É —á–∞—Ç–æ–≤ –∏/–∏–ª–∏ –±–ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –º–∞—Ç–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω—ã.", replyTo=id)

        if contents[1][0:].lower() in ("options_specify_chat_complaints") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #–£–∫–∞–∑–∞—Ç—å –∞–π–¥–∏ —á–∞—Ç–∞ –¥–ª—è –∂–∞–ª–æ–±.
        if contents[1][0:].lower() in ("options_specify_chat_complaints") and user_id in root_users: 
            if (options_response_mats_in_chats == "True" or options_response_mats_in_blogs == "True"):

                sub_client.send_message(chatId=chatId, message="–ü—Ä–∏–Ω—è—Ç–æ.", replyTo=id)       

                options_specify_chat_complaints_file = open(f"Info/Options specify chat complaints.txt", "w", encoding="utf-8")
                options_specify_chat_complaints_file.write(str(contents[2]))
                options_specify_chat_complaints_file.close()
            else:
                sub_client.send_message(chatId=chatId, message="–§—É–Ω–∫—Ü–∏–∏ –ø–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É —á–∞—Ç–æ–≤ –∏/–∏–ª–∏ –±–ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –º–∞—Ç–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω—ã.", replyTo=id)

        if contents[1][0:].lower() in ("options_specify_chat_complaints") and user_id not in root_users:
            sub_client.send_message(chatId=chatId, message="–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã –Ω–µ —Ä—É—Ç-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.", replyTo=id)

        #global options_greeting

    '''options_anti_raid  
    options_chat_assistant     
    options_greeting   
    options_response_mats_in_blogs     
    options_response_mats_in_chats    
    options_sendingGreetings     
    options_specify_chat_complaints''' 
    #"fa9b3477-6e83-4b01-8623-0705cf77e774"